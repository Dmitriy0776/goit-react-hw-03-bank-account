{"version":3,"sources":["Components/styles.module.css","Components/Controls/Controls.js","Components/Balance/Balance.js","Components/TransactionHistory/TransactionHistory.js","Components/Dashboard/Dashboard.js","Components/App.js","index.js"],"names":["module","exports","Controls","input","onChangeInput","onClikDepSub","onClikWithSub","className","styles","controls","controls_input","type","value","name","onChange","controls_buttonDeposit","onClick","controls_button","Balance","amountDeposit","amountWithdraw","amountBalance","balance","arrowUp","arrowDown","defaultProps","TransactionHistory","transactionArr","history","map","id","amount","date","key","Dashboard","state","transactions","inputValue","deposit","withdraw","notifyA","toast","notifyB","handleChangeInput","e","target","setState","handleDepositSubmit","transactionData","Date","toLocaleString","newDeposit","shortid","generate","Number","prevState","handleWithdrawSubmit","newWithdraw","getBankInfo","localStorage","getItem","newPartState","JSON","parse","this","err","prevProps","setItem","stringify","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8be94219.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"styles_history__3pIEx\",\"balance\":\"styles_balance__13AyL\",\"arrowUp\":\"styles_arrowUp__dNduJ\",\"arrowDown\":\"styles_arrowDown__sO3wJ\",\"controls\":\"styles_controls__171jM\",\"controls_input\":\"styles_controls_input__1stUZ\",\"controls_button\":\"styles_controls_button__F8aqx\",\"controls_buttonDeposit\":\"styles_controls_buttonDeposit__1R10j styles_controls_button__F8aqx\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from '../styles.module.css';\n\nconst Controls = ({ input, onChangeInput, onClikDepSub, onClikWithSub }) => {\n  return (\n    <section className={styles.controls}>\n      <input\n        className={styles.controls_input}\n        type=\"number\"\n        value={input}\n        name=\"inputValue\"\n        onChange={onChangeInput}\n      />\n      <button\n        className={styles.controls_buttonDeposit}\n        type=\"button\"\n        onClick={onClikDepSub}\n      >\n        Deposit\n      </button>\n      <button\n        className={styles.controls_button}\n        type=\"button\"\n        onClick={onClikWithSub}\n      >\n        Withdraw\n      </button>\n    </section>\n  );\n};\n\nControls.propTypes = {\n  input: PropTypes.string.isRequired,\n  onChangeInput: PropTypes.func.isRequired,\n  onClikDepSub: PropTypes.func.isRequired,\n  onClikWithSub: PropTypes.func.isRequired,\n};\n\nexport default Controls;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from '../styles.module.css';\n\nconst Balance = ({ amountDeposit, amountWithdraw, amountBalance }) => {\n  return (\n    <section className={styles.balance}>\n      <span className={styles.arrowUp}>⬆{amountDeposit}</span>\n      <span className={styles.arrowDown}>⬇{amountWithdraw}</span>\n      <span>Balance: {amountBalance}$</span>\n    </section>\n  );\n};\nBalance.defaultProps = {\n  amountDeposit: 0,\n  amountWithdraw: 0,\n  amountBalance: 0,\n};\nBalance.propTypes = {\n  amountDeposit: PropTypes.number,\n  amountWithdraw: PropTypes.number,\n  amountBalance: PropTypes.number,\n};\nexport default Balance;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from '../styles.module.css';\n\nconst TransactionHistory = ({ transactionArr }) => {\n  return (\n    <table className={styles.history}>\n      <thead>\n        <tr>\n          <th>Transaction</th>\n          <th>Amount</th>\n          <th>Date</th>\n        </tr>\n      </thead>\n      <tbody>\n        {transactionArr.map(({ id, type, amount, date }) => (\n          <tr key={id}>\n            <td>{type}</td>\n            <td>{amount}$</td>\n            <td>{date}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nTransactionHistory.propTypes = {\n  transactionArr: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      type: PropTypes.string,\n      amount: PropTypes.number,\n      date: PropTypes.string,\n    }),\n  ).isRequired,\n};\n\nexport default TransactionHistory;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport { ToastContainer, toast } from 'react-toastify';\nimport Controls from '../Controls/Controls';\nimport Balance from '../Balance/Balance';\nimport TransactionHistory from '../TransactionHistory/TransactionHistory';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default class Dashboard extends Component {\n  state = {\n    transactions: [],\n    balance: 0,\n    inputValue: '',\n    deposit: 0,\n    withdraw: 0,\n  };\n\n  componentDidMount() {\n    try {\n      const getBankInfo = localStorage.getItem('bankInfo');\n\n      if (getBankInfo !== null) {\n        const newPartState = JSON.parse(getBankInfo);\n\n        this.setState({ ...newPartState });\n      }\n    } catch (err) {\n      throw ('err :', err);\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { transactions, balance, deposit, withdraw } = this.state;\n\n    if (prevState.transactions !== transactions) {\n      localStorage.setItem(\n        'bankInfo',\n        JSON.stringify({ transactions, balance, deposit, withdraw }),\n      );\n    }\n  }\n\n  notifyA = () =>\n    toast('На счету недостаточно средств для проведения операции!');\n\n  notifyB = () => toast('Введите сумму для проведения операции!');\n\n  handleChangeInput = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleDepositSubmit = () => {\n    const { inputValue } = this.state;\n\n    const transactionData = new Date().toLocaleString('en-GB');\n\n    const newDeposit = {\n      id: shortid.generate(),\n      type: 'Withdrawal',\n      amount: Number(inputValue),\n      date: transactionData,\n    };\n    if (Number(inputValue) === 0 || Number(inputValue) === ' ') {\n      this.notifyB();\n    } else {\n      this.setState(prevState => ({\n        transactions: [...prevState.transactions, newDeposit],\n        balance: prevState.balance + Number(inputValue),\n        deposit: prevState.deposit + Number(inputValue),\n        inputValue: '',\n      }));\n    }\n  };\n\n  handleWithdrawSubmit = () => {\n    const { inputValue, balance } = this.state;\n\n    const transactionData = new Date().toLocaleString('en-GB');\n\n    const newWithdraw = {\n      id: shortid.generate(),\n      type: 'Withdrawal',\n      amount: Number(inputValue),\n      date: transactionData,\n    };\n    if (Number(inputValue) > balance) {\n      this.notifyA();\n    } else if (Number(inputValue) === 0 || Number(inputValue) === ' ') {\n      this.notifyB();\n    } else {\n      this.setState(prevState => ({\n        transactions: [...prevState.transactions, newWithdraw],\n        balance: prevState.balance - Number(inputValue),\n        withdraw: prevState.withdraw + Number(inputValue),\n        inputValue: '',\n      }));\n    }\n  };\n\n  render() {\n    const { transactions, inputValue, balance, deposit, withdraw } = this.state;\n    return (\n      <div>\n        <Controls\n          input={inputValue}\n          onChangeInput={this.handleChangeInput}\n          onClikDepSub={this.handleDepositSubmit}\n          onClikWithSub={this.handleWithdrawSubmit}\n        />\n        <Balance\n          amountDeposit={deposit}\n          amountWithdraw={withdraw}\n          amountBalance={balance}\n        />\n        <TransactionHistory transactionArr={transactions} />\n        <ToastContainer />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Dashboard from './Dashboard/Dashboard';\n\nconst App = () => {\n  return (\n    <>\n      <Dashboard />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}